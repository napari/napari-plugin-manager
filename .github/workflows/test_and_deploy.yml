# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: test and deploy

on:
  push:
    branches:
      - main
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  # Concurrency group that uses the workflow name and PR number if available
  # or commit SHA as a fallback. If a new build is triggered under that
  # concurrency group while a previous build is running it will be canceled.
  # Repeated pushes to a PR will cancel all previous builds, while multiple
  # merges to main will not cancel.
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  test:
    name: ${{ matrix.platform }}, py${{ matrix.python-version }}, napari ${{ matrix.napari }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11"]
        napari: ["latest", "repo"]
        exclude:
          # TODO: Remove when we have a napari release with the plugin manager changes
          - napari: "latest"
          # TODO: PyQt / PySide wheels missing
          - python-version: "3.11"
            platform: "windows-latest"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: tlambert03/setup-qt-libs@v1

      # strategy borrowed from vispy for installing opengl libs on windows
      - name: Install Windows OpenGL
        if: runner.os == 'Windows'
        run: |
          git clone --depth 1 https://github.com/pyvista/gl-ci-helpers.git
          powershell gl-ci-helpers/appveyor/install_opengl.ps1
          if (Test-Path -Path "C:\Windows\system32\opengl32.dll" -PathType Leaf) {Exit 0} else {Exit 1}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools tox tox-gh-actions

      - name: Test with tox
        uses: aganders3/headless-gui@v1
        with:
          run: python -m tox -vv
        env:
          PYVISTA_OFF_SCREEN: True  # required for opengl on windows
          NAPARI: ${{ matrix.napari }}
          FORCE_COLOR: 1
          # PySide6 only functional with Python 3.10+
          TOX_SKIP_ENV: ".*py39-PySide6.*"

      - name: pre-commit
        uses: pre-commit/action@v3.0.0

      - name: Coverage
        uses: codecov/codecov-action@v3

  deploy:
    # this will run when you have tagged a commit, starting with "v*"
    # and requires that you have put your twine API key in your
    # github secrets (see readme for details)
    needs: [test]
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tags')
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools build
      - name: Build
        run: |
          git tag
          python -m build
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
